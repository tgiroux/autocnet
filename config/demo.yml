### Cluster Configuration ###
cluster:
    # The number of times to retry a failing cluster job
    maxfailures: 3
    # Which processing queue should be used?
    queue: 'shortall'
    # Location to put <jobid.log> files for cluster jobs
    cluster_log_dir: '/logs'
    # What cluster submission tool should be used
    cluster_submission: 'slurm'  # or `pbs`
    # What scratch or temporary area should be used for temporary file creation
    tmp_scratch_dir: '/scratch'

    # The amount of RAM (in MB) to request for jobs
    extractor_memory: 8192
    processing_memory: 1024

### Database Configuration ###
database:
    # Name of the database management system. For example, postgresql or sqlite
    type: 'postgresql'
    # Username used to log in to the database
    username: 'jay'
    # Password used to log in to the database
    password: 'abcde'
    # Host machine name (or localhost) where the database is running
    host: '127.0.0.1'
    # Port that the database is exposed on
    port: 8085
    # Port where a proxy that manages database connections is running
    pgbouncer_port: 8083
    # The name of the database to connect to.  Tables will be created inside this DB.
    name: 'deleteme' # This needs to be all lowercase for PostGreSQL!
    # The number of seconds to wait while attemping to connect to the DB.
    timeout: 500

env: 
  conda: 'autocnet'  # The name of a conda environment to initialize for cluster jobs 
  ISISROOT: '/path_to/isisx.y.z'  # PATH to the ISISROOT directory
  ISISDATA: '/usgs/cpkgs/isis3/data'  # PATH to the ISISDATA directory
    
### Pfeffernusse / CSM Configuration ###
pfeffernusse:
    # URL to the service that serves CSM compliant ISDs
    url: 'http://pfeffer.wr.usgs.gov/v1/pds'

### Redis Configuration ###
redis:
    # Name of the redis queue. Ensure it is unique to avoid multiple uses
    # of the same redis queue.
    basename: 'demo'
    # Hostname (or localhost) where the redis server is running
    host: 'localhost'
    # Port that redis is accepting connections on
    port: '8084'
    # The name of the queue that successful job messages are pushed. This
    # name should be unique to avoid collision with other users.
    completed_queue: 'demo:done'
    # The name of the queue used for jobs that need to be started. This
    # name should be unique to avoid collision with other users.
    processing_queue: 'demo:proc'
    # The name of the queue that currently processing jobs are pushed to. This
    # name should be unique to avoid collision with other users.
    working_queue: 'demo:working'

### Spatial Reference Setup ###
spatial:
    # The following two values need to be added to the database that is storing
    # the spatial information.
    #
    # The spatial reference identifier for latitudinal geometries in the database.
    latitudinal_srid: 949900
    # The spatial reference identifier for rectangular geometries in the database.
    rectangular_srid: 949980
    # The radii of the body. If the body is a sphere, these values should match.
    # Units are in meters
    semimajor_rad: 3396190
    semiminor_rad: 3376200
    # A compliant proj4 string. Checkout http://spatialreference.org for examples
    # for planetary bodies.
    proj4_str: '+proj:longlat +a:3396190 +b:3376200 +no_defs'
    # DEM used to generate height values for projection
    dem: '$ISISDATA/dems/molaMarsPlanetaryRadius.cub'
    # Target for ISIS
    target: 'MARS'

### Working Directories ###
directories:
    # The directory where VRTs should be created
    vrt_dir: '/scratch/vrts'

